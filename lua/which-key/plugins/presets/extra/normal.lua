local wk = require("which-key")

local around_binds = {
  ["a"] = { name = "around" },
  ["a\""] = "double quoted string",
  ["a'"] = "single quoted string",
  ["a("] = "same as ab",
  ["a)"] = "same as ab",
  ["a<LT>"] = "\"a <>\" from '<' to the matching '>'",
  ["a>"] = "same as a<",
  ["aB"] = "\"a Block\" from \"[{\" to \"]}\" (with brackets)",
  ["aW"] = "\"a WORD\" (with white space)",
  ["a["] = "\"a []\" from '[' to the matching ']'",
  ["a]"] = "same as a[",
  ["a`"] = "string in backticks",
  ["ab"] = "\"a block\" from \"[(\" to \"])\" (with braces)",
  ["ap"] = "\"a paragraph\" (with white space)",
  ["as"] = "\"a sentence\" (with white space)",
  ["at"] = "\"a tag block\" (with white space)",
  ["aw"] = "\"a word\" (with white space)",
  ["a{"] = "same as aB",
  ["a}"] = "same as aB",
}

local inside_binds = {
  ["i"] = { name = "inside" },
  ["i\""] = "double quoted string without the quotes",
  ["i'"] = "single quoted string without the quotes",
  ["i("] = "same as ib",
  ["i)"] = "same as ib",
  ["i<LT>"] = "\"inner <>\" from '<' to the matching '>'",
  ["i>"] = "same as i<",
  ["iB"] = "\"inner Block\" from \"[{\" and \"]}\"",
  ["iW"] = "\"inner WORD\"",
  ["i["] = "\"inner []\" from '[' to the matching ']'",
  ["i]"] = "same as i[",
  ["i`"] = "string in backticks without the backticks",
  ["ib"] = "\"inner block\" from \"[(\" to \"])\"",
  ["ip"] = "\"inner paragraph\"",
  ["is"] = "\"inner sentence\"",
  ["it"] = "\"inner tag block\"",
  ["iw"] = "\"inner word\"",
  ["i{"] = "same as iB",
  ["i}"] = "same as iB",
}

local window_binds = {
  name = "window",
  ["+"] = "increase current window height N lines",
  ["-"] = "decrease current window height N lines",
  ["<LT>"] = "decrease current window width N columns",
  ["="] = "make all windows the same height & width",
  [">"] = "increase current window width N columns",
  ["H"] = "move current window to the far left",
  ["J"] = "move current window to the very bottom",
  ["K"] = "move current window to the very top",
  ["L"] = "move current window to the far right",
  ["P"] = "go to preview window",
  ["R"] = "rotate windows upwards N times",
  ["S"] = "same as \"CTRL-W s\"",
  ["T"] = "move current window to a new tab page",
  ["W"] = "go to N previous window (wrap around)",
  ["]"] = "split window and jump to tag under cursor",
  ["^"] = "split current window and edit alternate file N",
  ["_"] = "set current window height to N (default: very high)",
  ["b"] = "go to bottom window",
  ["c"] = "close current window (like |:close|)",
  ["d"] = "split window and jump to definition under the cursor",
  ["f"] = "split window and edit file name under the cursor",
  ["F"] = "split window and edit file name under the cursor and jump to the line number following the file name.",
  ["g<C-]>"] = "split window and do |:tjump| to tag under cursor",
  ["g]"] = "split window and do |:tselect| for tag under cursor",
  ["g}"] = "do a |:ptjump| to the tag under the cursor",
  ["gf"] = "edit file name under the cursor in a new tab page",
  ["gF"] = "edit file name under the cursor in a new tab page and jump to the line number following the file name.",
  ["gt"] = "same as `gt`: go to next tab page",
  ["gT"] = "same as `gT`: go to previous tab page",
  ["g<Tab>"] = "same as `g<Tab>` : go to last accessed tab page",
  ["h"] = "go to Nth left window (stop at first window)",
  ["i"] = "split window and jump to declaration of identifier under the cursor",
  ["j"] = "go N windows down (stop at last window)",
  ["k"] = "go N windows up (stop at first window)",
  ["l"] = "go to Nth right window (stop at last window)",
  ["n"] = "open new window, N lines high",
  ["o"] = "close all but current window (like |:only|)",
  ["p"] = "go to previous (last accessed) window",
  ["q"] = "quit current window (like |:quit|)",
  ["r"] = "rotate windows downwards N times",
  ["s"] = "split current window in two parts, new window N lines high",
  ["t"] = "go to top window",
  ["v"] = "split current window vertically, new window N columns wide",
  ["w"] = "go to N next window (wrap around)",
  ["x"] = "exchange current window with window N (default: next window)",
  ["z"] = "close preview window",
  ["|"] = "set window width to N columns",
  ["}"] = "show tag under cursor in preview window",
  ["<Down>"] = "same as \"CTRL-W j\"",
  ["<Up>"] = "same as \"CTRL-W k\"",
  ["<Left>"] = "same as \"CTRL-W h\"",
  ["<Right>"] = "same as \"CTRL-W l\"",
}

local left_square_bracket_binds = {
  ["<C-d>"] = "jump to first #define found in current and included files matching the word under the cursor, start searching at beginning of current file",
  ["<C-i>"] = "jump to first line in current and included files that contains the word under the cursor, start searching at beginning of current file",
  ["D"] = "list all defines found in current and included files matching the word under the cursor, start searching at beginning of current file",
  ["I"] = "list all lines found in current and included files that contain the word under the cursor, start searching at beginning of current file",
  ["P"] = "↶ same as \"[p\"",
  ["d"] = "show first #define found in current and included files matching the word under the cursor, start searching at beginning of current file",
  ["f"] = "same as \"gf\"",
  ["i"] = "show first line found in current and included files that contains the word under the cursor, start searching at beginning of current file",
  ["p"] = "↶ like \"P\", but adjust indent to current line",
  -- ['<MiddleMouse>'] = '↶ same as "[p"'
}

local right_square_bracket_binds = {
  ["<C-d>"] = "jump to first #define found in current and included files matching the word under the cursor, start searching at cursor position",
  ["<C-i>"] = "jump to first line in current and included files that contains the word under the cursor, start searching at cursor position",
  ["D"] = "list all #defines found in current and included files matching the word under the cursor, start searching at cursor position",
  ["I"] = "list all lines found in current and included files that contain the word under the cursor, start searching at cursor position",
  ["P"] = "↶ same as \"[p\"",
  ["d"] = "show first #define found in current and included files matching the word under the cursor, start searching at cursor position",
  ["f"] = "same as \"gf\"",
  ["i"] = "show first line found in current and included files that contains the word under the cursor, start searching at cursor position",
  ["p"] = "↶ like \"p\", but adjust indent to current line",
  -- ['<MiddleMouse>'] = '↶ same as "]p"'
}

local g_binds = {
  ["<C-a>"] = "only when compiled with MEM_PROFILE defined: dump a memory profile",
  ["<C-g>"] = "show information about current cursor position",
  ["<C-h>"] = "start Select block mode",
  ["<C-]>"] = "|:tjump| to the tag under the cursor",
  ["&"] = "↶ repeat last \":s\" on all lines",
  ["+"] = "go to newer text state N times",
  ["-"] = "go to older text state N times",
  ["8"] = "print hex value of bytes used in UTF-8 character under the cursor",
  ["<LT>"] = "display previous command output",
  ["?"] = "↶ Rot13 encoding operator",
  ["??"] = "↶ Rot13 encode current line",
  -- ['?g?'] = '↶ Rot13 encode current line',
  ["H"] = "start Select line mode",
  ["I"] = "↶ like \"I\", but always start in column 1",
  ["J"] = "↶ join lines without inserting space",
  ["P"] = "↶,✝ put the text [from register x] before the cursor N times, leave the cursor after it",
  ["Q"] = "switch to \"Ex\" mode with Vim editing",
  ["R"] = "↶ enter Virtual Replace mode",
  ["T"] = "go to the previous tab page",
  ["V"] = "don't reselect the previous Visual area when executing a mapping or menu in Select mode",
  ["]"] = ":tselect on the tag under the cursor",
  ["a"] = "print ascii value of character under the cursor",
  ["f"] = "start editing the file whose name is under the cursor",
  ["F"] = "start editing the file whose name is under the cursor and jump to the line number following the filename.",
  ["h"] = "start Select mode",
  ["i"] = "↶ like \"i\", but first move to the |'^| mark",
  ["p"] = "↶,✝ put the text [from register x] after the cursor N times, leave the cursor after it",
  ["r"] = "↶ virtual replace N chars with {char}",
  ["s"] = "go to sleep for N seconds (default 1)",
  ["t"] = "go to the next tab page",
  ["v"] = "reselect the previous Visual area",
  ["x"] = "execute application for file name under the cursor (only with |netrw| plugin)",
  -- ['<LeftMouse>'] = 'same as <C-LeftMouse>',
  -- ['<MiddleMouse>'] = 'same as <C-MiddleMouse>',
  -- ['<RightMouse>'] = 'same as <C-RightMouse>',
  ["<Tab>"] = "go to last accessed tab page",
}

local z_binds = {
  ["<CR>"] = "redraw, cursor line to top of window, cursor on first non-blank",
  -- ['{height}<CR>'] = 'redraw, make window {height} lines high',
  ["+"] = "cursor on line N (default line below window), otherwise like \"z<CR>\"",
  ["-"] = "redraw, cursor line at bottom of window, cursor on first non-blank",
  ["."] = "redraw, cursor line to center of window, cursor on first non-blank",
  ["="] = "give spelling suggestions",
  ["A"] = "open a closed fold or close an open fold recursively",
  ["C"] = "close folds recursively",
  ["D"] = "delete folds recursively",
  ["E"] = "eliminate all folds",
  ["F"] = "create a fold for N lines",
  ["G"] = "temporarily mark word as correctly spelled",
  ["H"] = "when 'wrap' off scroll half a screenwidth to the right",
  ["L"] = "when 'wrap' off scroll half a screenwidth to the left",
  ["M"] = "set 'foldlevel' to zero",
  ["N"] = "set 'foldenable'",
  ["O"] = "open folds recursively",
  ["R"] = "set 'foldlevel' to the deepest fold",
  ["W"] = "temporarily mark word as incorrectly spelled",
  ["X"] = "re-apply 'foldlevel'",
  ["^"] = "cursor on line N (default line above window), otherwise like \"z-\"",
  ["a"] = "open a closed fold, close an open fold",
  ["b"] = "redraw, cursor line at bottom of window",
  ["c"] = "close a fold",
  ["d"] = "delete a fold",
  ["e"] = "when 'wrap' off scroll horizontally to position the cursor at the end (right side) of the screen",
  ["g"] = "permanently mark word as correctly spelled",
  ["h"] = "when 'wrap' off scroll screen N characters to the right",
  ["i"] = "toggle 'foldenable'",
  ["l"] = "when 'wrap' off scroll screen N characters to the left",
  ["m"] = "subtract one from 'foldlevel'",
  ["n"] = "reset 'foldenable'",
  ["o"] = "open fold",
  ["p"] = "paste in block-mode without trailing spaces",
  ["P"] = "paste in block-mode without trailing spaces",
  ["r"] = "add one to 'foldlevel'",
  ["s"] = "when 'wrap' off scroll horizontally to position the cursor at the start (left side) of the screen",
  ["t"] = "redraw, cursor line at top of window",
  ["u"] = {
    name = "undo",
    ["w"] = "undo |zw|",
    ["g"] = "undo |zg|",
    ["W"] = "undo |zW|",
    ["G"] = "undo |zG|",
  },
  ["v"] = "open enough folds to view the cursor line",
  ["w"] = "permanently mark word as incorrectly spelled",
  ["x"] = "re-apply 'foldlevel' and do \"zv\"",
  ["y"] = "yank without trailing spaces",
  ["z"] = "redraw, cursor line at center of window",
  ["<Left>"] = "same as \"zh\"",
  ["<Right>"] = "same as \"zl\"",
}

local motions = {
  ["<C-b>"] = "⤨ scroll N screens Backwards",
  ["<C-f>"] = "⤨ scroll N screens Forward",
  ["<BS>"] = "⤨ same as \"h\"",
  ["<C-h>"] = "⤨ same as \"h\"",
  ["<Tab>"] = "⤨ go to N newer entry in jump list",
  ["<C-i>"] = "⤨ same as <Tab>",
  ["<NL>"] = "⤨ same as \"j\"",
  ["<C-j>"] = "⤨ same as \"j\"",
  ["<CR>"] = "⤨ cursor to the first CHAR N lines lower",
  ["<C-m>"] = "⤨ same as <CR>",
  ["<C-n>"] = "⤨ same as \"j\"",
  ["<C-o>"] = "⤨ go to N older entry in jump list",
  ["<C-p>"] = "⤨ same as \"k\"",
  ["<Space>"] = "⤨ same as \"l\"",
  ["#"] = "⤨ search backward for the Nth occurrence of the ident under the cursor",
  ["$"] = "⤨ cursor to the end of Nth next line",
  ["%"] = "⤨ find the next (curly/square) bracket on this line and go to its match, or go to matching comment bracket, or go to matching preprocessor directive.",
  -- ['{count}%'] = '⤨ go to N percentage in the file',
  -- ['\''] = '⤨ cursor to the first CHAR on the line with mark {a-zA-Z0-9}',
  -- ['\'\''] = '⤨ cursor to the first CHAR of the line where the cursor was before the latest jump.',
  -- ['\'('] = '⤨ cursor to the first CHAR on the line of the start of the current sentence',
  -- ['\')'] = '⤨ cursor to the first CHAR on the line of the end of the current sentence',
  -- ['\'<LT>'] = '⤨ cursor to the first CHAR of the line where highlighted area starts/started in the current buffer.',
  -- ['\'>'] = '⤨ cursor to the first CHAR of the line where highlighted area ends/ended in the current buffer.',
  -- ['\'['] = '⤨ cursor to the first CHAR on the line of the start of last operated text or start of put text',
  -- ['\']'] = '⤨ cursor to the first CHAR on the line of the end of last operated text or end of put text',
  -- ['\'{'] = '⤨ cursor to the first CHAR on the line of the start of the current paragraph',
  -- ['\'}'] = '⤨ cursor to the first CHAR on the line of the end of the current paragraph',
  ["("] = "⤨ cursor N sentences backward",
  [")"] = "⤨ cursor N sentences forward",
  ["*"] = "⤨ search forward for the Nth occurrence of the ident under the cursor",
  ["+"] = "⤨ same as <CR>",
  [","] = "⤨ repeat latest f, t, F or T in opposite direction N times",
  ["-"] = "⤨ cursor to the first CHAR N lines higher",
  ["/"] = "⤨ search forward for the Nth occurrence of {pattern}",
  ["/<CR>"] = "⤨ search forward for {pattern} of last search",
  ["0"] = "⤨ cursor to the first char of the line",
  [":"] = "⤨ start entering an Ex command",
  [";"] = "⤨ repeat latest f, t, F or T N times",
  ["?"] = "⤨ search backward for the Nth previous occurrence of {pattern}",
  ["?<CR>"] = "⤨ search backward for {pattern} of last search",
  ["B"] = "⤨ cursor N WORDS backward",
  ["E"] = "⤨ cursor forward to the end of WORD N",
  ["F"] = "⤨ cursor to the Nth occurrence of {char} to the left",
  ["G"] = "⤨ cursor to line N, default last line",
  ["H"] = "⤨ cursor to line N from top of screen",
  ["L"] = "⤨ cursor to line N from bottom of screen",
  ["M"] = "⤨ cursor to middle line of screen",
  ["N"] = "⤨ repeat the latest '/' or '?' N times in opposite direction",
  ["T"] = "⤨ cursor till after Nth occurrence of {char} to the left",
  ["W"] = "⤨ cursor N WORDS forward",
  ["^"] = "⤨ cursor to the first CHAR of the line",
  ["_"] = "⤨ cursor to the first CHAR N - 1 lines lower",
  -- ['`'] = '⤨ cursor to the mark {a-zA-Z0-9}',
  -- ['`('] = '⤨ cursor to the start of the current sentence',
  -- ['`)'] = '⤨ cursor to the end of the current sentence',
  -- ['`<LT>'] = '⤨ cursor to the start of the highlighted area',
  -- ['`>'] = '⤨ cursor to the end of the highlighted area',
  -- ['`['] = '⤨ cursor to the start of last operated text or start of putted text',
  -- ['`]'] = '⤨ cursor to the end of last operated text or end of putted text',
  -- ['``'] = '⤨ cursor to the position before latest jump',
  -- ['`{'] = '⤨ cursor to the start of the current paragraph',
  -- ['`}'] = '⤨ cursor to the end of the current paragraph',
  ["b"] = "⤨ cursor N words backward",
  ["e"] = "⤨ cursor forward to the end of word N",
  ["f"] = "⤨ cursor to Nth occurrence of {char} to the right",
  ["h"] = "⤨ cursor N chars to the left",
  ["j"] = "⤨ cursor N lines downward",
  ["k"] = "⤨ cursor N lines upward",
  ["l"] = "⤨ cursor N chars to the right",
  ["n"] = "⤨ repeat the latest '/' or '?' N times",
  ["t"] = "⤨ cursor till before Nth occurrence of {char} to the right",
  ["w"] = "⤨ cursor N words forward",
  ["{"] = "⤨ cursor N paragraphs backward",
  ["|"] = "⤨ cursor to column N",
  ["}"] = "⤨ cursor N paragraphs forward",
  ["<C-End>"] = "⤨ same as \"G\"",
  ["<C-Home>"] = "⤨ same as \"gg\"",
  ["<C-Left>"] = "⤨ same as \"b\"",
  ["<C-Right>"] = "⤨ same as \"w\"",
  ["<Down>"] = "⤨ same as \"j\"",
  ["<End>"] = "⤨ same as \"$\"",
  ["<Home>"] = "⤨ same as \"0\"",
  ["<Left>"] = "⤨ same as \"h\"",
  ["<Right>"] = "⤨ same as \"l\"",
  ["<S-Down>"] = "⤨ same as CTRL-F",
  ["<S-Left>"] = "⤨ same as \"b\"",
  ["<S-Right>"] = "⤨ same as \"w\"",
  ["<S-Up>"] = "⤨ same as CTRL-B",
  ["<Up>"] = "⤨ same as \"k\"",
  ["[#"] = "⤨ cursor to N previous unmatched #if, #else or #ifdef",
  ["['"] = "⤨ cursor to previous lowercase mark, on first non-blank",
  ["[("] = "⤨ cursor N times back to unmatched '('",
  ["[*"] = "⤨ same as \"[/\"",
  ["[`"] = "⤨ cursor to previous lowercase mark",
  ["[/"] = "⤨ cursor to N previous start of a C comment",
  ["[["] = "⤨ cursor N sections backward",
  ["[]"] = "⤨ cursor N SECTIONS backward",
  ["[c"] = "⤨ cursor N times backwards to start of change",
  ["[m"] = "⤨ cursor N times back to start of member function",
  ["[s"] = "⤨ move to the previous misspelled word",
  ["[z"] = "⤨ move to start of open fold",
  ["[{"] = "⤨ cursor N times back to unmatched '{'",
  ["]#"] = "⤨ cursor to N next unmatched #endif or #else",
  ["]'"] = "⤨ cursor to next lowercase mark, on first non-blank",
  ["])"] = "⤨ cursor N times forward to unmatched ')'",
  ["]*"] = "⤨ same as \"]/\"",
  ["]`"] = "⤨ cursor to next lowercase mark",
  ["]/"] = "⤨ cursor to N next end of a C comment",
  ["]["] = "⤨ cursor N SECTIONS forward",
  ["]]"] = "⤨ cursor N sections forward",
  ["]c"] = "⤨ cursor N times forward to start of change",
  ["]m"] = "⤨ cursor N times forward to end of member function",
  ["]s"] = "⤨ move to next misspelled word",
  ["]z"] = "⤨ move to end of open fold",
  ["]}"] = "⤨ cursor N times forward to unmatched '}'",
  ["g#"] = "⤨ like \"#\", but without using \"\\<\" and \"\\>\"",
  ["g$"] = "⤨ when 'wrap' off go to rightmost character of the current line that is on the screen; when 'wrap' on go to the rightmost character of the current screen line",
  -- ['g\'{mark}'] = '⤨ like |\'| but without changing the jumplist',
  -- ['g`{mark}'] = '⤨ like |`| but without changing the jumplist',
  ["g*"] = "⤨ like \"*\", but without using \"\\<\" and \"\\>\"",
  ["g,"] = "⤨ go to N newer position in change list",
  ["g0"] = "⤨ when 'wrap' off go to leftmost character of the current line that is on the screen; when 'wrap' on go to the leftmost character of the current screen line",
  ["g;"] = "⤨ go to N older position in change list",
  ["gD"] = "⤨ go to definition of word under the cursor in current file",
  ["gE"] = "⤨ go backwards to the end of the previous WORD",
  ["gN"] = "⤨,↶ find the previous match with the last used search pattern and Visually select it",
  ["g^"] = "⤨ when 'wrap' off go to leftmost non-white character of the current line that is on the screen; when 'wrap' on go to the leftmost non-white character of the current screen line",
  ["g_"] = "⤨ cursor to the last CHAR N - 1 lines lower",
  ["gd"] = "⤨ go to definition of word under the cursor in current function",
  ["ge"] = "⤨ go backwards to the end of the previous word",
  ["gg"] = "⤨ cursor to line N, default first line",
  ["gj"] = "⤨ like \"j\", but when 'wrap' on go N screen lines down",
  ["gk"] = "⤨ like \"k\", but when 'wrap' on go N screen lines up",
  ["gm"] = "⤨ go to character at middle of the screenline",
  ["gM"] = "⤨ go to character at middle of the text line",
  ["gn"] = "⤨,↶ find the next match with the last used search pattern and Visually select it",
  ["go"] = "⤨ cursor to byte N in the buffer",
  ["g<Down>"] = "⤨ same as \"gj\"",
  ["g<End>"] = "⤨ same as \"g$\"",
  ["g<Home>"] = "⤨ same as \"g0\"",
  ["g<Up>"] = "⤨ same as \"gk\"",
  ["zj"] = "⤨ move to the start of the next fold",
  ["zk"] = "⤨ move to the end of the previous fold",
}

local operators = {
  ["c"] = "↶,✝,§ delete text [into register x] and start insert",
  ["d"] = "↶,✝,§ delete text [into register x]",
  ["y"] = "✝,§ yank text [into register x]",
  ["~"] = "↶,§ if 'tildeop' on, switch case of text",
  ["!"] = "↶,§ filter text through the {filter} command",
  ["<LT>"] = "↶,§ shift lines one 'shiftwidth' leftwards",
  [">"] = "↶,§ shift lines one 'shiftwidth' rightwards",
  ["="] = "↶,§ filter lines through \"indent\"",
  ["gU"] = "↶,§ make text uppercase",
  ["gq"] = "↶,§ format text",
  ["gu"] = "↶,§ make text lowercase",
  ["gw"] = "↶,§ format text and keep cursor",
  ["g@"] = "§ call 'operatorfunc'",
  ["g~"] = "↶,§ swap case for text",
  ["zf"] = "§ create a fold for text",
}

local normal_binds = {
  ["<C-a>"] = "↶ add N to number at/after cursor",
  ["<C-c>"] = "interrupt current (search) command",
  ["<C-d>"] = "scroll Down N lines (default: half a screen)",
  ["<C-e>"] = "scroll N lines upwards (N lines Extra)",
  ["<C-g>"] = "display current file name and position",
  ["<C-l>"] = "redraw screen",
  ["<C-r>"] = "↶ redo changes which were undone with 'u'",
  ["<C-t>"] = "jump to N older Tag in tag list",
  ["<C-u>"] = "scroll N lines Upwards (default: half a screen)",
  ["<C-v>"] = "start blockwise Visual mode",
  ["<C-w>"] = window_binds,
  ["<C-x>"] = "↶ subtract N from number at/after cursor",
  ["<C-y>"] = "scroll N lines downwards",
  ["<C-z>"] = "suspend program (or start new shell)",
  ["<C-\\>"] = {
    name = "mode",
    ["<C-n>"] = "go to Normal mode (no-op)",
    ["<C-g>"] = "go to mode specified with 'insertmode'",
  },
  ["<C-]>"] = ":ta to ident under cursor",
  ["<C-^>"] = "edit Nth alternate file (equivalent to \":e #N\")",
  ["<C-Tab>"] = "same as `g<Tab>` : go to last accessed tab page",
  ["!!"] = "↶ filter N lines through the {filter} command",
  -- ['"{register}  '] = 'use {register} for next delete, yank or put ({.%#:} only work with put)',
  ["&"] = "↶ repeat last :s",
  ["."] = "↶ repeat last change with count replaced with N",
  -- ['{count}:'] = 'start entering an Ex command with range from current line to N-1 lines down',
  ["<LT><LT>"] = "↶ shift N lines one 'shiftwidth' leftwards",
  ["=="] = "↶ filter N lines through \"indent\"",
  [">>"] = "↶ shift N lines one 'shiftwidth' rightwards",
  ["@"] = "↶ execute the contents of register {a-z} N times",
  ["@:"] = "repeat the previous \":\" command N times",
  ["@@"] = "↶ repeat the previous @{a-z} N times",
  ["A"] = "↶ append text after the end of the line N times",
  ["C"] = "↶,✝ change from the cursor position to the end of the line, and N-1 more lines [into register x]; synonym for \"c$\"",
  ["D"] = "↶,✝ delete the characters under the cursor until the end of the line and N-1 more  lines [into register x]; synonym for \"d$\"",
  ["I"] = "↶ insert text before the first CHAR on the line N times",
  ["J"] = "↶ Join N lines; default is 2",
  ["K"] = "lookup Keyword under the cursor with 'keywordprg'",
  ["O"] = "↶ begin a new line above the cursor and insert text, repeat N times",
  ["P"] = "↶,✝ put the text [from register x] before the cursor N times",
  ["Q"] = "switch to \"Ex\" mode",
  ["R"] = "↶ enter replace mode: overtype existing characters, repeat the entered text N-1 times",
  ["S"] = "↶,✝ delete N lines [into register x] and start insert; synonym for \"cc\".",
  ["U"] = "↶ undo all latest changes on one line",
  ["V"] = "start linewise Visual mode",
  ["X"] = "↶,✝ delete N characters before the cursor [into register x]",
  ["Y"] = "✝ yank N lines [into register x]; synonym for \"yy\"",
  ["ZZ"] = "write if buffer changed and close window",
  ["ZQ"] = "close window without writing",
  ["["] = left_square_bracket_binds,
  ["]"] = right_square_bracket_binds,
  ["a"] = "↶ append text after the cursor N times",
  ["cc"] = "↶,✝ delete N lines [into register x] and start insert",
  ["dd"] = "↶,✝ delete N lines [into register x]",
  ["do"] = "↶ same as \":diffget\"",
  ["dp"] = "↶ same as \":diffput\"",
  ["g"] = g_binds,
  ["i"] = "↶ insert text before the cursor N times",
  ["m"] = "set mark {A-Za-z} at cursor position",
  ["o"] = "↶ begin a new line below the cursor and insert text, repeat N times",
  ["p"] = "↶,✝ put the text [from register x] after the cursor N times",
  ["q"] = "record typed characters into named register {0-9a-zA-Z\"} (uppercase to append); (while recording) stops recording",
  ["q:"] = "edit : command-line in command-line window",
  ["q/"] = "edit / command-line in command-line window",
  ["q?"] = "edit ? command-line in command-line window",
  ["r"] = "↶ replace N chars with {char}",
  ["s"] = "↶,✝ (substitute) delete N characters [into register x] and start insert",
  ["u"] = "↶ undo changes",
  ["v"] = "start charwise Visual mode",
  ["x"] = "↶,✝ delete N characters under and after the cursor [into register x]",
  ["yy"] = "✝ yank N lines [into register x]",
  ["z"] = z_binds,
  -- ['<C-LeftMouse>'] = '":ta" to the keyword at the mouse click',
  -- ['<C-RightMouse>'] = 'same as "CTRL-T"',
  ["<Del>"] = "↶,✝ same as \"x\"",
  -- ['{count}<Del>'] = 'remove the last digit from {count}',
  ["<F1>"] = "same as <Help>",
  -- ['<Help>'] = 'open a help window',
  ["<Insert>"] = "↶ same as \"i\"",
  -- ['<LeftMouse>'] = '⤨ move cursor to the mouse click position',
  -- ['<MiddleMouse>'] = '↶ same as "gP" at the mouse click position',
  ["<PageDown>"] = "same as CTRL-F",
  ["<PageUp>"] = "same as CTRL-B",
  -- ['<RightMouse>'] = 'start Visual mode, move cursor to the mouse click position',
  -- ['<S-LeftMouse>'] = 'same as "*" at the mouse click position',
  -- ['<S-RightMouse>'] = 'same as "#" at the mouse click position',
  -- ['<Undo>'] = '↶ same as "u"',
  -- ['<ScrollWheelDown>'] = 'move window three lines down',
  -- ['<S-ScrollWheelDown>'] = 'move window one page down',
  -- ['<ScrollWheelUp>'] = 'move window three lines up',
  -- ['<S-ScrollWheelUp>'] = 'move window one page up',
  -- ['<ScrollWheelLeft>'] = 'move window six columns left',
  -- ['<S-ScrollWheelLeft>'] = 'move window one page left',
  -- ['<ScrollWheelRight>'] = 'move window six columns right',
  -- ['<S-ScrollWheelRight>'] = 'move window one page right'
}

wk.register(normal_binds, { mode = "n", prefix = "", preset = true })
